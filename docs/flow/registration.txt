// Powered by https://swimlanes.io
title: Регистрация пользователя

order: Пользователь, Сервер, Менеджер

_: **1. Создание гостя**

Пользователь -> Сервер: `register`

note:
**regitster** создает нового пользователя в базе данных.

_Запись гостя удалится из БД через 4 часа, если он окончательно не зарегистрируется_

Пользователь <- Сервер: JWT

_: **2. Заполнение анкеты**

Пользователь -> Сервер: `requestSetUserEmail`

Сервер --> Пользователь: Отправка токена на почту

Пользователь -> Сервер: `approveSetUserEmail(token)`

note:
Создает пустую анкету, если ее ранее не было и устанвливает в ней переданную почту.

Сервер -> Пользователь: Измененная анкета

--: Аналогично для `requestSetUserPhone`

Пользователь -> Сервер: `updateUserPassword`

note:
Установка начального пароля

Сервер -> Пользователь: Измененная анкета

Пользователь -> Сервер: `updateUserDraftForm`

note:
Заполняет все поля анкеты, которые не требуют проверки через токен. 

Сервер -> Пользователь: Измененная анкета

_: **3. Модерация анкеты**

Пользователь -> Сервер: `requestModerateUserForm`

Пользователь <-- Сервер: Отправка токена на телефон
Пользователь -> Сервер: `approveModerateUserForm(token)`
Пользователь <- Сервер: Измененная анкета

...: Менеджер приступил к подтвержению анкет

Менеджер <- Сервер: `userForms`

if: Анкета заполнена правильно

Менеджер -> Сервер: `approveUserForm`

note:
После подтверждения отправляется заявка в банк на создание аккаунта.

Сервер --> Пользователь: Отправка уведомления на почту
Сервер --> Менеджер: Измененная анкета

else: В анкете существуют ошибки или неточности

Менеджер -> Сервер: `declineUserForm`
Сервер --> Пользователь: Отправить уведомление на почту
Сервер --> Менеджер: Измененная анкета

...: Клиент должен изменить информацию в анкете и отправить ее на повторную модерацию

end